<!--MainPage.xaml is where the user puts all information they would like their
    GPS trace to be stored. So they will choose the Title of the path, the mode of 
    transportation(walking, bike, or car) and then to navigate. After they input this information
    they will be prompted with two warning messages. The first is making sure that the information
    they selected is what they wanted, if not the page will not link to the second page and the 
    user will have the ability to input their data again. The second warning message is wheter or not 
    they will allow their phone to use GPS. If no is pressed then applicaition will not proceed to 
    second page.-->
    
<phone:PhoneApplicationPage
    x:Class="Bingtographer_App.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    shell:SystemTray.IsVisible="True">




    <!--LayoutRoot is the root grid where all page content is placed. Set background color to 
    black.-->
    <Grid x:Name="LayoutRoot" Background="#000000">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- LOCALIZATION NOTE:
            To localize the displayed strings copy their values to appropriately named
            keys in the app's neutral language resource file (AppResources.resx) then
            replace the hard-coded text value between the attributes' quotation marks
            with the binding clause whose path points to that string name.

            For example:

                Text="{Binding Path=LocalizedResources.ApplicationTitle, Source={StaticResource LocalizedStrings}}"

            This binding points to the template's string resource named "ApplicationTitle".

            Adding supported languages in the Project Properties tab will create a
            new resx file per language that can carry the translated values of your
            UI strings. The binding in these examples will cause the value of the
            attributes to be drawn from the .resx file that matches the
            CurrentUICulture of the app at run time.
         -->

        <!--TitlePanel contains the name of the Page title Add New Path-->
        <StackPanel x:Name="TitlePanel" Grid.Row="0" Margin="12,45,0,0">
            <TextBlock Style="{StaticResource PhoneTextNormalStyle}" Margin="12,0"/>
            <TextBlock Text="Add New Path" Margin="9,-7,0,0" Style="{StaticResource PhoneTextTitle1Style}"/>
        </StackPanel>

        <!--ContentPanel - place additional content here-->
        <!--This adds the naviagate button We add a rectangle with a gunmental background to keep the 
        same color scheme. The Naviagate button is a hyperlink that will take the user to the next page
        passing in the parameters the user set on this page.-->
        <Rectangle Fill="#292E37" HorizontalAlignment="Left" Height="66" Margin="79,541,0,0" Grid.Row="1" Stroke="Black" VerticalAlignment="Top" Width="282"/>
        <HyperlinkButton Content="Navigate!"  Click="hyperlinkButton1_Click" HorizontalAlignment="Left" Height="45" Margin="79,552,0,0" Grid.Row="1" VerticalAlignment="Top" Width="282" Background="#292E37">
            <HyperlinkButton.BorderBrush>
                <ImageBrush Stretch="Fill"/>
            </HyperlinkButton.BorderBrush>
        </HyperlinkButton>
        <!--This is the top textbox, it will add the users set title to the path for the database-->
        <TextBox x:Name="textbox1" HorizontalAlignment="Left" Height="72" Margin="0,54,0,0" Grid.Row="1" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="456"/>
        <TextBlock HorizontalAlignment="Left" Margin="17,22,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Name of Path" VerticalAlignment="Top"/>
        <Rectangle Fill="#292E37" HorizontalAlignment="Left" Height="152" Margin="0,171,0,0" Grid.Row="1" Stroke="Black" VerticalAlignment="Top" Width="480"/>

        <!--This is the set list of the Icons used. There are actually 6 icons always present. There is
        a icon for walking, biking, and a car. All these icons are either ones that are filled in or ones that aren't
        depending on what the user selects the opacity of the icon selected and filled will switch to 100 and the
        one that is just an outline will switch to 0. All icons where designed by Erin Anderson-->
        <Image x:Name="bikeicon" HorizontalAlignment="Left" Height="100" Margin="159,190,0,0" Grid.Row="1" VerticalAlignment="Top" Width="100" Source="/Bingtographer_Icons/biker3.png"/>
        <Image x:Name="bikeiconsolid" HorizontalAlignment="Left" Height="100" Margin="159,190,0,0" Grid.Row="1" VerticalAlignment="Top" Width="100" Opacity="0" Source="/Bingtographer_Icons/biker5.png"/>
        <Image x:Name="walkericon" HorizontalAlignment="Left" Height="100" Margin="37,190,0,0" Grid.Row="1" VerticalAlignment="Top" Width="100" Opacity="100"  Source="/Bingtographer_Icons/walking2.png"/>
        <Image x:Name="walkericonsolid" HorizontalAlignment="Left" Height="100" Margin="37,190,0,0" Grid.Row="1" VerticalAlignment="Top" Width="100" Source="/Bingtographer_Icons/walking3.png"/>
        <Image x:Name="caricon" HorizontalAlignment="Left" Height="90" Margin="319,200,0,0" Grid.Row="1" VerticalAlignment="Top" Width="117" Source="/Bingtographer_Icons/car2.png"/>
        <Image x:Name="cariconsolid" HorizontalAlignment="Left" Height="90" Margin="319,200,0,0" Grid.Row="1" VerticalAlignment="Top" Width="117" Opacity="0" Source="/Bingtographer_Icons/car3.png"/>
        <TextBlock HorizontalAlignment="Left" Margin="17,137,0,0" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" Width="278">
        	<Run Text="Select Mode of Transportation"/>
        	<LineBreak/>
        	<Run/>
        </TextBlock>
        <!--This is where the user selects the type of path used that will push to the database. Types are defined from existing data and are changed in the corresponding 
        MainPage.xaml.cs file-->
        <TextBlock HorizontalAlignment="Left" Margin="17,328,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Select Type of Trail" VerticalAlignment="Top" Width="195"/>
        <Button Content="" HorizontalAlignment="Left" Margin="17,171,0,0" Grid.Row="1" VerticalAlignment="Top" Height="136" Width="137" Click="walker_Click" Opacity="0"/>
        <Button Content="" HorizontalAlignment="Left" Margin="143,171,0,0" Grid.Row="1" VerticalAlignment="Top" Height="136" Width="137" Click="bike_Click" Opacity="0"/>
        <RadioButton x:Name="option1" Content="sidewalk" HorizontalAlignment="Left" Margin="12,355,0,0" Grid.Row="1" VerticalAlignment="Top" Width="349" Checked="option1_Checked"/>
        <RadioButton x:Name="option2"  Content ="tertiary" HorizontalAlignment="Left" Margin="12,410,0,0" Grid.Row="1" VerticalAlignment="Top" Checked="option2_Checked" Width="326"/>
        <RadioButton x:Name="option3"  Content ="pedestrian" HorizontalAlignment="Left" Margin="12,464,0,0" Grid.Row="1" VerticalAlignment="Top" Checked="option3_Checked" Width="326"/>
       
        
        <!--This is the Main Logo for our application designed by Erin Anderson-->        
        <Image HorizontalAlignment="Left" Height="49" Margin="160,10,0,0" VerticalAlignment="Top" Width="276" Source="/Bingtographer_Icons/Logo2White.png"/>


        <!--Uncomment to see an alignment grid to help ensure your controls are
            aligned on common boundaries.  The image has a top margin of -32px to
            account for the System Tray. Set this to 0 (or remove the margin altogether)
            if the System Tray is hidden.

            Before shipping remove this XAML and the image itself.-->
        <!--<Image Source="/Assets/AlignmentGrid.png" VerticalAlignment="Top" Height="800" Width="480" Margin="0,-32,0,0" Grid.Row="0" Grid.RowSpan="2" IsHitTestVisible="False" />-->
    </Grid>

</phone:PhoneApplicationPage>
    